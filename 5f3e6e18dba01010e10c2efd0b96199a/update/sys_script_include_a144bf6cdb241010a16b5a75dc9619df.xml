<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>sn_gcp_cds_spoke.GCloudDatastoreErrorHandler</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>GCloudDatastoreErrorHandler</name>
        <script><![CDATA[var GCloudDatastoreErrorHandler = Class.create();
GCloudDatastoreErrorHandler.prototype = {
    initialize: function() {},
    getGenericError: function(key) {
        var errorMessage = {
            "authError": "Invalid authorization header. The access token you're using is either expired or invalid.",
            "notFound": "Invalid Project ID.",
            "PERMISSION_DENIED": "Invalid Project ID.",
            "required": "Invalid authorization header. The access token you're using is either expired or invalid."
        };
        return errorMessage[key];
    },
    errorMessageHandling: function(inputs, outputs) {
        var errorResponse = JSON.parse(inputs.responseBody);
        outputs.errormessage = this.getGenericError(errorResponse.error.status || errorResponse.error.message);
        if (!outputs.errormessage)
            outputs.errormessage = errorResponse.error.message;
        return outputs.errormessage;
    },
    indexErrorMessage: function(inputs, outputs) {
        var errorResponse = JSON.parse(inputs.responseBody);
        outputs.errormessage = this.getGenericError(errorResponse.error.status);
        var errorMessage = errorResponse.error.message;
        var errorCode = errorResponse.error.code;
        if (errorCode == 409 && errorMessage.indexOf('already exists') != -1)
            outputs.errormessage = "Index already exist.";
        else if (errorCode == 400 && errorMessage.indexOf('Invalid index resource id') != -1)
            outputs.errormessage = "Invalid index resource ID.";
        if (!outputs.errormessage)
            outputs.errormessage = errorMessage;
        return outputs;
    },
    entityErrorMessage: function(inputs, outputs) {
        var errorResponse = JSON.parse(inputs.responseBody);
        outputs.errormessage = this.getGenericError(errorResponse.error.status);
        var errorMessage = errorResponse.error.message;
        var errorCode = errorResponse.error.code;
        if (errorCode == 404) {
            if (errorMessage.indexOf('Invalid Google Cloud Storage bucket') != -1)
                outputs.errormessage = "Invalid bucket name.";
            else if (errorMessage.indexOf('Google Cloud Storage file does not exist') != -1)
                outputs.errormessage = "Google Cloud Storage file does not exist.";
        } else if (errorCode == 400) {
            if (errorMessage.indexOf('This project can only operate on buckets spanning location') != -1)
                outputs.errormessage = "Bucket does not exist in same location.";
            else if (errorMessage.indexOf('Invalid Google Cloud Storage bucket') != -1)
                outputs.errormessage = "Invalid bucket name.";
			else if(errorMessage.indexOf('The requested kinds/namespaces are not available') != -1 )
				outputs.errormessage = "Requested kinds/namespaces are not available.";
        }
        if (!outputs.errormessage)
            outputs.errormessage = errorMessage;
        return outputs;
	},
    type: 'GCloudDatastoreErrorHandler'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-30 10:47:16</sys_created_on>
        <sys_id>a144bf6cdb241010a16b5a75dc9619df</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name>GCloudDatastoreErrorHandler</sys_name>
        <sys_package display_value="Google Cloud Datastore Spoke" source="sn_gcp_cds_spoke">5f3e6e18dba01010e10c2efd0b96199a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Google Cloud Datastore Spoke">5f3e6e18dba01010e10c2efd0b96199a</sys_scope>
        <sys_update_name>sys_script_include_a144bf6cdb241010a16b5a75dc9619df</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-06 11:45:44</sys_updated_on>
    </sys_script_include>
</record_update>
